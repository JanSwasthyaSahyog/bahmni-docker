version: "3.7"

x-default-logging: &default
  {}

x-loki-logging: &loki
  driver: loki
  options:
    loki-url: ${LOKI_URL:?}
    mode: non-blocking
    max-buffer-size: 4m
    loki-retries: "3"

x-log-config: &log-config
  # update this value to *loki if needed to see logs in grafana dashboard.
  <<: *loki


services:
  proxy:
    image: bahmniindiadistro/proxy:${PROXY_IMAGE_TAG:?}
    restart: unless-stopped
    environment:
      TZ: ${TZ}
    logging: *log-config
    volumes:
      - ${CERTIFICATE_PATH}:/etc/tls

    ports:
      - "80:80"
      - "443:443"

  # bahmni-config:
  #   image: '${CONFIG_IMAGE_NAME:?}:${CONFIG_IMAGE_TAG:?}'
  #   volumes:
  #     - '${CONFIG_VOLUME:?}:/usr/local/bahmni_config'

  openmrs:
    profiles: ['emr']
    image: bahmniindiadistro/openmrs:${OPENMRS_IMAGE_TAG}
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      OMRS_DB_NAME: ${OPENMRS_DB_NAME:?}
      OMRS_DB_HOSTNAME: ${OPENMRS_DB_HOST:?}
      OMRS_DB_USERNAME: ${OPENMRS_DB_USERNAME:?}
      OMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
      OMRS_CREATE_TABLES: ${OPENMRS_DB_CREATE_TABLES}
      OMRS_AUTO_UPDATE_DATABASE: ${OPENMRS_DB_AUTO_UPDATE}
      OMRS_MODULE_WEB_ADMIN: ${OPENMRS_MODULE_WEB_ADMIN}
      OMRS_C3P0_MAX_SIZE: ${OMRS_C3P0_MAX_SIZE}
      # OMRS_DEV_DEBUG_PORT: ${OMRS_DEV_DEBUG_PORT}     
      OMRS_JAVA_SERVER_OPTS: ${OMRS_JAVA_SERVER_OPTS}
      OMRS_JAVA_MEMORY_OPTS: ${OMRS_JAVA_MEMORY_OPTS}
      OPENELIS_HOST: ${OPENELIS_HOST:?}
      OPENELIS_PORT: ${OPENELIS_PORT:?}
      OPENELIS_ATOMFEED_USER: ${OPENELIS_ATOMFEED_USER:?}
      OPENELIS_ATOMFEED_PASSWORD: ${OPENELIS_ATOMFEED_PASSWORD:?}
      OMRS_DOCKER_ENV: ${OPENMRS_DOCKER_ENV}
      #Mail config
      SEND_MAIL: ${SEND_MAIL}
      MAIL_TRANSPORT_PROTOCOL: ${MAIL_TRANSPORT_PROTOCOL}
      MAIL_SMTP_HOST: ${MAIL_SMTP_HOST}
      MAIL_SMTP_PORT: ${MAIL_SMTP_PORT}
      MAIL_SMTP_AUTH: ${MAIL_SMTP_AUTH}
      MAIL_SMTP_STARTTLS_ENABLE: ${MAIL_SMTP_STARTTLS_ENABLE}
      MAIL_SMTP_SSL_ENABLE: ${MAIL_SMTP_SSL_ENABLE}
      MAIL_DEBUG: ${MAIL_DEBUG}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_USER: ${MAIL_USER}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      #HIP-OMOD Variables. Refer here https://github.com/BahmniIndiaDistro/openmrs-module-hip/tree/master#docker-setup
      LOCATION: ${LOCATION:?}
      PHONE_NUMBER: ${PHONE_NUMBER:?}
      LAB_ORDER_TYPE_ID: "3"
    ports:
      - '8080:8080'
    logging: *log-config
    volumes:
      # - 'openmrs-data:/openmrs/data/modules'
      - '${ABDM_CONFIG_PROPERTIES_PATH}/abdm_config.properties:/openmrs/data/abdm_config.properties'
      - '${CONFIG_VOLUME:?}:/etc/bahmni_config/:ro'
      - 'bahmni-patient-images:/home/bahmni/patient_images'
      - 'bahmni-document-images:/home/bahmni/document_images'
      - 'bahmni-clinical-forms:/home/bahmni/clinical_forms'
      - 'configuration_checksums:/openmrs/data/configuration_checksums'
      - "bahmni-lab-results:/home/bahmni/uploaded_results"
      - "bahmni-uploaded-files:/home/bahmni/uploaded-files"
    depends_on:
      - openmrsdb

  openmrsdb:
    image: ${OPENMRS_DB_IMAGE_NAME:?}
    restart: unless-stopped
    profiles: ['emr']
    command: --character-set-server=utf8 --collation-server=utf8_general_ci
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}
      MYSQL_DATABASE: ${OPENMRS_DB_NAME:?}
      MYSQL_USER: ${OPENMRS_DB_USERNAME:?}
      MYSQL_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
    ports:
      - '3306:3306'
    logging: *log-config
    volumes:
      - 'openmrsdbdata:/var/lib/mysql'
      - 'configuration_checksums:/configuration_checksums'

  bahmni-web:
    image: bahmni/bahmni-web:${BAHMNI_WEB_IMAGE_TAG:?}
    restart: unless-stopped
    profiles: ['emr']
    environment:
      TZ: ${TZ}
    logging: *log-config
    volumes:
      #- "${BAHMNI_APPS_PATH:?}/ui/app/:/usr/local/apache2/htdocs/bahmni"
      #- "${BAHMNI_APPS_PATH:?}/ui/node_modules/@bower_components/:/usr/local/apache2/htdocs/bahmni/components"
      - '${CONFIG_VOLUME:?}:/usr/local/apache2/htdocs/bahmni_config/:ro'

  reports:
    image: bahmni/reports:${REPORTS_IMAGE_TAG:?}
    restart: unless-stopped
    profiles: ["reports"]
    environment:
      TZ: ${TZ}
      OPENMRS_DB_HOST: ${OPENMRS_DB_HOST:?}
      OPENMRS_DB_NAME: ${OPENMRS_DB_NAME:?}
      OPENMRS_DB_USERNAME: ${OPENMRS_DB_USERNAME:?}
      OPENMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD:?}
      OPENMRS_HOST: ${OPENMRS_HOST:?}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      OPENELIS_DB_SERVER: ${OPENELIS_DB_SERVER:?}
      REPORTS_DB_SERVER: reportsdb
      REPORTS_DB_NAME: ${REPORTS_DB_NAME:?}
      REPORTS_DB_USERNAME: ${REPORTS_DB_USERNAME:?}
      REPORTS_DB_PASSWORD: ${REPORTS_DB_PASSWORD:?}
      ODOO_DB_SERVER: ${ODOO_DB_SERVER:?}
      ODOO_DB_NAME: ${ODOO_DB_NAME:?}
      ODOO_DB_USERNAME: ${ODOO_DB_USER:?}
      ODOO_DB_PASSWORD: ${ODOO_DB_PASSWORD:?}
    logging: *log-config
    volumes:
      - '${CONFIG_VOLUME:?}:/etc/bahmni_config/:ro'
      - "bahmni-queued-reports:/home/bahmni/reports"
    depends_on:
      - reportsdb
      - openmrsdb
      - bahmni-web

  reportsdb:
    image: mysql:5.6
    restart: unless-stopped
    profiles: ["reports"]
    logging: *log-config
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}
      MYSQL_DATABASE: ${REPORTS_DB_NAME:?}
      MYSQL_USER: ${REPORTS_DB_USERNAME:?}
      MYSQL_PASSWORD: ${REPORTS_DB_PASSWORD:?}

  patient-documents:
     image: 'bahmni/patient-documents:${PATIENT_DOCUMENTS_TAG:?}'
     restart: unless-stopped
     profiles: ['emr']
     logging: *log-config
     volumes:
       - 'bahmni-document-images:/usr/share/nginx/html/document_images'
       - 'bahmni-lab-results:/usr/share/nginx/html/uploaded_results'
       - 'bahmni-uploaded-files:/usr/share/nginx/html/uploaded-files'
     environment:
       - TZ=${TZ:?}
       - OPENMRS_HOST=${OPENMRS_HOST:?}

  appointments:
    image: bahmni/appointments:${APPOINTMENTS_IMAGE_TAG:?}
    restart: unless-stopped
    profiles: ['emr','appointments']
    logging: *log-config
    environment:
      TZ: ${TZ}
#    volumes:
#      - "${APPOINTMENTS_PATH:?}/dist/:/usr/local/apache2/htdocs/appointments"

  implementer-interface:
    image: bahmni/implementer-interface:${IMPLEMENTER_INTERFACE_IMAGE_TAG:?}
    restart: unless-stopped
    profiles: ["emr","implementer-interface"]
    logging: *log-config
    environment:
      TZ: ${TZ}
    #volumes:
    #  - "${IMPLEMENTER_INTERFACE_CODE_PATH:?}/dist:/usr/local/apache2/htdocs/implementer_interface"
    depends_on:
      - openmrs

  openelis:
    profiles: ["openelis"]
    image: 'bahmni/openelis:${OPENELIS_IMAGE_TAG:?[ERROR]}'
    restart: unless-stopped
    volumes:
      - "${CONFIG_VOLUME:?}:/etc/bahmni_config/:ro"
      - "bahmni-lab-results:/home/bahmni/uploaded_results"
      - "bahmni-uploaded-files:/home/bahmni/uploaded-files"
    environment:
      TZ: ${TZ}
      OPENMRS_HOST: ${OPENMRS_HOST}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      OPENMRS_ATOMFEED_USER: ${OPENMRS_ATOMFEED_USER:?}
      OPENMRS_ATOMFEED_PASSWORD: ${OPENMRS_ATOMFEED_PASSWORD:?}
      OPENELIS_DB_SERVER: ${OPENELIS_DB_SERVER}
    depends_on:
      openelisdb:
        condition: service_healthy
    logging: *log-config

  openelisdb:
    profiles: ["openelis"]
    image: '${OPENELIS_DB_IMAGE_NAME:?[ERROR]}'
    restart: unless-stopped
    volumes:
      - 'openelisdbdata:/var/lib/postgresql/data'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      TZ: ${TZ}
      POSTGRES_USER: ${OPENELIS_DB_USER:?}
      POSTGRES_PASSWORD: ${OPENELIS_DB_PASSWORD:?}
      POSTGRES_DB: ${OPENELIS_DB_NAME:?}
    ports:
      - '5433:5432'
    logging: *log-config

  dcm4chee:
    image: bahmni/dcm4chee:${DCM4CHEE_IMAGE_TAG:?}
    profiles: ["pacs"]
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      DB_HOST: ${PACS_DB_HOST:?}
      DB_PORT: ${PACS_DB_PORT:?}
      DB_NAME: ${DCM4CHEE_DB_NAME:?}
      DB_USERNAME: ${DCM4CHEE_DB_USERNAME:?}
      DB_PASSWORD: ${DCM4CHEE_DB_PASSWORD:?}
    ports:
      - '8055:8055'
      - '11112:11112'
      - '104:104'
    volumes:
      - '/pacs-images:/var/lib/bahmni/dcm4chee/server/default/archive'
      - 'dcm4chee-config:/var/lib/bahmni/dcm4chee/server/default/data/xmbean-attrs'
    logging: *log-config

  pacs-integration:
    image: bahmni/pacs-integration:${PACS_INTEGRATION_IMAGE_TAG:?}
    profiles: ["pacs"]
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      DB_HOST: ${PACS_DB_HOST:?}
      DB_PORT: ${PACS_DB_PORT:?}
      DB_NAME: ${PACS_INTEGRATION_DB_NAME:?}
      DB_USERNAME: ${PACS_INTEGRATION_DB_USERNAME:?}
      DB_PASSWORD: ${PACS_INTEGRATION_DB_PASSWORD:?}
      OPENMRS_HOST: ${OPENMRS_HOST:?}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      OPENMRS_ATOMFEED_USER: ${OPENMRS_ATOMFEED_USER:?}
      OPENMRS_ATOMFEED_PASSWORD: ${OPENMRS_ATOMFEED_PASSWORD:?}
    logging: *log-config

  pacsdb:
    image: ${PACS_DB_IMAGE_NAME:?}
    profiles: ["pacs"]
    restart: unless-stopped
    environment:
      TZ: ${TZ}
      POSTGRES_PASSWORD: ${PACS_DB_ROOT_PASSWORD}
      DCM4CHEE_DB_NAME: ${DCM4CHEE_DB_NAME:?}
      DCM4CHEE_DB_USERNAME: ${DCM4CHEE_DB_USERNAME:?}
      DCM4CHEE_DB_PASSWORD: ${DCM4CHEE_DB_PASSWORD:?}
      PACS_INTEGRATION_DB_NAME: ${PACS_INTEGRATION_DB_NAME:?}
      PACS_INTEGRATION_DB_USERNAME: ${PACS_INTEGRATION_DB_USERNAME:?}
      PACS_INTEGRATION_DB_PASSWORD: ${PACS_INTEGRATION_DB_PASSWORD:?}
    volumes:
      - '${PWD}/init_pacs_dbs.sh:/docker-entrypoint-initdb.d/init_pacs_dbs.sh'
      - 'pacsdbdata:/var/lib/postgresql/data'
    logging: *log-config

  odoo:
    profiles: ["odoo"]
    image: 'bahmni/odoo-16:${ODOO_IMAGE_TAG:?[ERROR]}'
    ports:
      - '8069:8069'
    volumes:
      - odooappdata:/var/lib/odoo
      - ${EXTRA_ADDONS_PATH}:/mnt/extra-addons
    depends_on:
      odoodb:
        condition: service_healthy
    environment:
      HOST: ${ODOO_DB_SERVER}
      USER: ${ODOO_DB_USER}
      PASSWORD: ${ODOO_DB_PASSWORD}
      TZ: ${TZ}
    logging: *log-config

  odoodb:
    profiles: ["odoo"]
    image: ${ODOO_DB_IMAGE_NAME:?}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U odoo']
      interval: 10s
      timeout: 5s
    environment:
      POSTGRES_DB: ${ODOO_DB_NAME}
      POSTGRES_USER: ${ODOO_DB_USER}
      POSTGRES_PASSWORD: ${ODOO_DB_PASSWORD}
      TZ: ${TZ}
    volumes:
      - 'odoodbdata:/var/lib/postgresql/data'
    logging: *log-config

  odoo-connect:
    profiles: ["odoo"]
    image: 'bahmni/odoo-connect:${ODOO_CONNECT_IMAGE_TAG:?[ERROR]}'
    environment:
      IS_ODOO_16: true
      LOGGING_LEVEL: ${ODOO_CONNECT_LOG_LEVEL:?}
      ODOO_DB_SERVER: ${ODOO_DB_SERVER:?}
      ODOO_DB_USERNAME: ${ODOO_DB_USER:?}
      ODOO_DB_PASSWORD: ${ODOO_DB_PASSWORD:?}
      OPENMRS_HOST: ${OPENMRS_HOST:?}
      OPENMRS_PORT: ${OPENMRS_PORT:?}
      OPENMRS_ATOMFEED_USER: ${OPENMRS_ATOMFEED_USER:?}
      OPENMRS_ATOMFEED_PASSWORD: ${OPENMRS_ATOMFEED_PASSWORD:?}
      OPENELIS_HOST: ${OPENELIS_HOST:?}
      OPENELIS_PORT: ${OPENELIS_PORT:?}
      OPENELIS_ATOMFEED_USER: ${OPENELIS_ATOMFEED_USER:?}
      OPENELIS_ATOMFEED_PASSWORD: ${OPENELIS_ATOMFEED_PASSWORD:?}
      ODOO_HOST: ${ODOO_HOST:?}
      ODOO_PORT: ${ODOO_PORT:?}
      ODOO_ATOMFEED_USER: ${ODOO_ATOMFEED_USER:?}
      ODOO_ATOMFEED_PASSWORD: ${ODOO_ATOMFEED_PASSWORD:?}
      TZ: ${TZ}
    depends_on:
      odoodb:
        condition: service_healthy
    logging: *log-config

      
  db:
    container_name: db
    image: postgres:${POSTGRES_IMAGE_TAG:?}
    restart: unless-stopped
    profiles: ["abdm","hip","hiu","hip-atomfeed"]
    logging: *log-config
    environment:
      - TZ=${TZ:?}
      - POSTGRES_USER=${HIP_DB_USER:?}
      - POSTGRES_PASSWORD=${HIP_DB_PASSWORD:?}
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
  rabbitmq:
      image: rabbitmq:${RABBITMQ_IMAGE_TAG:?}
      profiles: ["abdm","hip","hiu"]
      restart: unless-stopped
      container_name: rabbitmq
      logging: *log-config
      environment:
        TZ: ${TZ}
  otp:
      image: bahmniindiadistro/otp-service:${OTP_SERVICE_IMAGE_TAG:?}
      restart: unless-stopped
      profiles: ["abdm","hip"]
      container_name: otp
      logging: *log-config
      depends_on:
        - db
      environment:
        TZ: ${TZ}
        whitelisted:numbers: ${OTP_WHITELIST_NUMBERS}
        D7SmsService:Token: ${D7_SMS_API_TOKEN}
        D7SmsService:Originator: ${D7_SMS_ORIGINATOR}
        SmsService:SmsSuffix: "SlNT"
        ConnectionStrings:DefaultConnection: Host=${OTP_DB_HOST:?};Port=${OTP_DB_PORT:?};Username=${OTP_DB_USER:?};Password=${OTP_DB_PASSWORD:?};Database=${OTP_DB_NAME:?};

  hiu-db-setup:
      image: bahmniindiadistro/hiu-db:${HIU_DB_INITIALIZER_IMAGE_TAG:?}
      profiles: ["abdm","hiu"]
      container_name: hiu-db-setup
      logging: *log-config
      environment:
        - TZ=${TZ}
        - 'JAVA_TOOL_OPTIONS=-Djdbc.url=${HIU_DB_URL:?} -Djdbc.username=${HIU_DB_USER:?} -Djdbc.password=${HIU_DB_PASSWORD:?} -Djdbc.database=${HIU_DB_NAME:?}'

  hip:
    container_name: hip
    image: bahmniindiadistro/hip:${HIP_IMAGE_TAG:?}
    restart: unless-stopped
    profiles: ["abdm","hip"]
    logging: *log-config
    depends_on:
      - db
      - otp
      - rabbitmq
    environment:
      TZ: ${TZ}
      Gateway:clientSecret: ${ABDM_GATEWAY_CLIENT_SECRET:?}
      Gateway:clientId: ${ABDM_GATEWAY_CLIENT_ID:?}
      Gateway:url: ${ABDM_GATEWAY_URL:?}
      Gateway:abhaNumberServiceUrl: ${ABHA_NUMBER_SERVICE_URL:?}
      OpenMrs:url: ${OPENMRS_URL:?}
      OpenMrs:password: ${OPENMRS_PASSWORD:?}
      OpenMrs:phoneNumber: ${PHONE_NUMBER:?}
      Gateway:cmSuffix: ${ABDM_CONSENT_MANAGEMENT_SUFFIX:?}
      OtpService:BaseUrl: ${HIP_OTP_SERVICE_URL:?}
      OtpService:SenderSystemName: ${OTP_SERVICE_SENDER_NAME}
      hip:url: ${HIP_URL:?}
      HEALTH_CHECK_DURATION: ${HIP_OPENMRS_HEALTH_CHECK_DURATION:?}
      Cors:allowedOrigins: ${HIP_CORS_ALLOWED_ORIGIN:?}
      Bahmni:Id: ${HIP_ID:?}
      rabbit:HostName: ${RABBITMQ_HOST:?}
      rabbit:UserName: ${RABBITMQ_USERNAME:?}
      rabbit:Password: ${RABBITMQ_PASSWORD:?}
      ConnectionStrings:DefaultConnection: Host=${HIP_DB_HOST:?};Port=${HIP_DB_PORT:?};Username=${HIP_DB_USER:?};Password=${HIP_DB_PASSWORD:?};Database=${HIP_DB_NAME:?};

  hiu:
    image: bahmniindiadistro/hiu:${HIU_IMAGE_TAG:?}
    restart: unless-stopped
    profiles: ["abdm","hiu"]
    container_name: hiu
    logging: *log-config
    environment:
      TZ: ${TZ}
      HIU_ID: ${HIU_ID:?}
      HIU_NAME: ${HIU_NAME:?}
      IDENTITY_JWK_URL: ${ABDM_IDENTITY_JWK_URL:?}
      DATA_PUSH_URL: ${HIU_DATA_PUSH_URL:?}
      CONSENT_NOTIFICATION_URL: ${ABDM_CONSENT_NOTIFICATION_URL:?}
      CONSENT_MANAGEMENT_SUFFIX:  ${HIU_ABDM_CONSENT_MANAGEMENT_SUFFIX:?}
      CONSENT_MANAGEMENT_URL: ${ABDM_CONSENT_MANAGEMENT_URL:?}
      DEFAULT_PAGE_SIZE: ${HIU_DEFAULT_PAGE_SIZE:?}
      MAX_PAGE_SIZE: ${HIU_MAX_PAGE_SIZE:?}
      LOCAL_STORAGE_PATH: ${HIU_LOCAL_STORAGE_PATH}
      HIU_CLIENT_ID: ${ABDM_GATEWAY_CLIENT_ID:?}
      HIU_CLIENT_SECRET: ${ABDM_GATEWAY_CLIENT_SECRET:?}
      POSTGRES_HOST: ${HIU_DB_HOST:?}
      POSTGRES_PORT: ${HIU_DB_PORT}
      CONSENT_MANAGER_DB_NAME: ${HIU_DB_NAME:?}
      POSTGRES_USER: ${HIU_DB_USER:?}
      POSTGRES_PASSWORD: ${HIU_DB_PASSWORD:?}
      DB_CONNECTION_POOL_SIZE: ${HIU_DB_CONNECTION_POOL_SIZE:?}
      OFFSET_IN_DAYS: ${HIU_OFFSET_IN_DAYS:?}
      USING_GATEWAY: ${HIU_USING_GATEWAY:?}
      GATEWAY_BASE_URL: ${ABDM_GATEWAY_BASE_URL:?}
      GATEWAY_REQUEST_TIMEOUT: ${HIU_GATEWAY_REQUEST_TIMEOUT:?}
      GATEWAY_JWK_URL: ${ABDM_GATEWAY_JWK_URL:?}
      HFR_AFFINITY_DOMAINS: ${ABDM_HFR_AFFINITY_DOMAINS:?}
      RABBITMQ_HOST: ${HIU_RABBITMQ_HOST:?}
      RABBITMQ_PORT: ${HIU_RABBITMQ_PORT:?}
      RABBITMQ_USERNAME: ${HIU_RABBITMQ_USERNAME:?}
      RABBITMQ_PASSWORD: ${HIU_RABBITMQ_PASSWORD:?}
      MAX_IN_MEMORY_SIZE: ${HIU_MAX_IN_MEMORY_SIZE:?}
      DATA_FLOW_CONSENT_REQUEST_WAIT_TIME: ${HIU_DATA_FLOW_CONSENT_REQUEST_WAIT_TIME:?}
      DATA_FLOW_CONSENT_ARTEFACT_WAIT_TIME: ${HIU_DATA_FLOW_CONSENT_ARTEFACT_WAIT_TIME:?}
      DATA_FLOW_PART_WAIT_TIME: ${HIU_DATA_FLOW_PART_WAIT_TIME:?}

  hiu-ui:
    image: bahmniindiadistro/hiu-ui:${HIU_UI_IMAGE_TAG:?}
    restart: unless-stopped
    profiles: ["abdm","hiu"]
    container_name: hiu-ui
    logging: *log-config
    environment:
      TZ: ${TZ}
      BACKEND_BASE_URL: ${HIU_BACKEND_BASE_URL:?}
      BASE_NAME: ${HIU_UI_BASE_NAME:?}
      TIMEZONE_OFFSET: ${TIMEZONE_OFFSET:?}
      TITLE: "HIU"

  hip-atomfeed-listener:
    container_name: hip-atomfeed-listener
    image: bahmniindiadistro/hip-atomfeed:${HIP_ATOMFEED_IMAGE_TAG:?}
    profiles: ["abdm","hip-atomfeed"]
    restart: unless-stopped
    logging: *log-config
    environment:
      TZ: ${TZ}
      DATABASE_URL: ${HIP_ATOMFEED_DB_URL:?}
      DATABASE_NAME: ${HIP_ATOMFEED_DB_NAME:?}
      DATABASE_USERNAME: ${HIP_DB_USER:?}
      DATABASE_PASSWORD: ${HIP_DB_PASSWORD:?}
      OPENMRS_URL: ${OPENMRS_SESSION_URL:?}
      OPENMRS_ENCOUNTER_FEED_URL: ${OPENMRS_ENCOUNTER_FEED_URL:?}
      HIP_URL: ${HIP_URL:?}
      OPENMRS_USERNAME: ${OPENMRS_USERNAME:?}
      OPENMRS_PASSWORD: ${OPENMRS_PASSWORD:?}
      PHONE_NUMBER: ${PHONE_NUMBER:?}
    depends_on:
      - db

  abha-verification:
    image: bahmniindiadistro/abha-verification:${ABHA_VERIFICATION_IMAGE_TAG:?}
    restart: unless-stopped
    profiles: ["abdm","hip"]
    logging: *log-config
    environment:
      TZ: ${TZ}

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:${CADVISOR_IMAGE_TAG:?}
    container_name: cadvisor
    restart: unless-stopped
    profiles: ["monitoring-metrics"]
    logging: *log-config
    environment:
      TZ: ${TZ}
    command:
      - '-housekeeping_interval=10s'
      - '-docker_only=true'
    ports:
      - "8100:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  node-exporter:
    image: prom/node-exporter:${NODE_EXPORTER_IMAGE_TAG:?}
    container_name: node-exporter
    restart: unless-stopped
    profiles: ["monitoring-metrics"]
    logging: *log-config
    environment:
      TZ: ${TZ}
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  restore_volumes:
    image: bash:5.2.15
    profiles: ["restore"]
    command: "bash /restore_docker_volumes.sh"
    environment:
      TZ: ${TZ}
    volumes:
        - "${RESTORE_ARTIFACTS_PATH}:/restore-artifacts"
        - './backup_restore/restore_docker_volumes.sh:/restore_docker_volumes.sh'
        - 'bahmni-patient-images:/mounts/bahmni-patient-images'
        - 'bahmni-document-images:/mounts/bahmni-document-images'
        - 'bahmni-clinical-forms:/mounts/bahmni-clinical-forms'
        - 'bahmni-lab-results:/mounts/bahmni-lab-results'
        - 'bahmni-queued-reports:/mounts/bahmni-queued-reports'
        - 'bahmni-uploaded-files:/mounts/bahmni-uploaded-files'
        #- 'dcm4chee-archive:/mounts/dcm4chee-archive'
        - 'configuration_checksums:/mounts/configuration_checksums'

volumes:
  openmrs-data:
  openmrsdbdata:
  bahmni-patient-images:
  bahmni-document-images:
  postgresql:
  postgresql_data:
  bahmni-config:
  bahmni-clinical-forms:
  configuration_checksums:
  bahmni-queued-reports:
  bahmni-lab-results:
  bahmni-uploaded-files:
  dcm4chee-archive:
  openelisdbdata:
  pacsdbdata:
  dcm4chee-config:

